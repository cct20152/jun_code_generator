<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jun.plugin.dao.MySQLGeneratorDao">
	<!-- 查询有那些表 -->
	<select id="queryList" resultType="map">
		select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables
		where table_schema = (select database())
		<if test="tableName != null and tableName.trim() != ''">
			and table_name like concat('%', #{tableName}, '%')
		</if>
		order by create_time desc
	</select>
	
	<!-- 查询表 -->
	<select id="queryTable" resultType="map">
		select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables
			where table_schema = (select database()) and table_name = #{tableName}
	</select>

	<!-- 表字段概况 -->
	<select id="queryColumns" resultType="map">
		select column_name columnName, data_type dataType, column_comment columnComment, column_key columnKey, extra from information_schema.columns
 			where table_name = #{tableName} and table_schema = (select database()) order by ordinal_position
	</select>
	 
	
	<!-- 表字段详情  -->
	<select id="queryColumns2" resultType="Map" parameterType="String">
		select 
		TABLE_CATALOG as table_catalog
		,TABLE_SCHEMA as table_schema
		,TABLE_NAME as table_name
		,COLUMN_NAME as column_name
		,ORDINAL_POSITION as ordinal_position
		,COLUMN_DEFAULT as column_default
		,IS_NULLABLE as is_nullable
		,DATA_TYPE as data_type
		,CHARACTER_MAXIMUM_LENGTH as character_maximum_length
		<!-- #,CHARACTER_OCTET_LENGTH as character_octet_length
		#,NUMERIC_PRECISION as numeric_precision
		#,NUMERIC_SCALE as numeric_scale
		#,DATETIME_PRECISION as datetime_precision
		#,CHARACTER_SET_NAME as character_set_name
		#,COLLATION_NAME as collation_name -->
		,COLUMN_TYPE as column_type
		,COLUMN_KEY as column_key
		,EXTRA as extra
		<!-- #,PRIVILEGES as privileges -->
		,COLUMN_COMMENT as column_comment
		<!-- ,GENERATION_EXPRESSION as generation_expression -->
		 from information_schema.columns
 		where table_name = #{tableName} and table_schema = (select database()) order by ordinal_position
	</select>
	
	<select id="queryColumns3" resultType="Map" parameterType="String">
		select 
		TABLE_CATALOG as table_catalog
		,TABLE_SCHEMA as table_schema
		,TABLE_NAME as table_name
		,COLUMN_NAME as column_name
		,ORDINAL_POSITION as ordinal_position
		,COLUMN_DEFAULT as column_default
		,IS_NULLABLE as is_nullable
		,DATA_TYPE as data_type
		,CHARACTER_MAXIMUM_LENGTH as character_maximum_length
		<!-- #,CHARACTER_OCTET_LENGTH as character_octet_length
		#,NUMERIC_PRECISION as numeric_precision
		#,NUMERIC_SCALE as numeric_scale
		#,DATETIME_PRECISION as datetime_precision
		#,CHARACTER_SET_NAME as character_set_name
		#,COLLATION_NAME as collation_name -->
		,COLUMN_TYPE as column_type
		,COLUMN_KEY as column_key
		,EXTRA as extra
		<!-- #,PRIVILEGES as privileges -->
		,COLUMN_COMMENT as column_comment
		<!-- ,GENERATION_EXPRESSION as generation_expression -->
		 from information_schema.columns
 		where table_name = #{tableName} and table_schema = (select database()) order by ordinal_position
	</select>
</mapper>