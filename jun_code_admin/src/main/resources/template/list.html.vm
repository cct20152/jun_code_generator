<div class="sm-rightPanel">
    <div class="layui-anim layui-anim-upbit">
        <div id="list_form" class="layui-form sm-operation">
            <blockquote class="site-text layui-elem-quote">
                <!--查询表单手动修改-->
                <div class="layui-form-item">
                    <div class="layui-inline">
                        <label class="layui-form-label">名称：</label>
                        <div class="layui-input-inline">
                            <input name="name" type="text" autocomplete="off" placeholder="登陆名称"
                                   class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">状态：</label>
                        <div class="layui-input-inline">
                            <select id="status" name="status" lay-filter="statusList">
                                <option value="">全部</option>
                                <option value="0">启用</option>
                                <option value="1">禁用</option>
                                <option value="2">锁定</option>
                            </select>
                        </div>
                    </div>
                    <div class="layui-inline">
                        <button class="layui-btn" id="query"><i class="iconfont icon-sousuo"></i>查询</button>
                    </div>
                </div>
            </blockquote>
            <div class="layui-form-item">
                <button class="layui-btn layui-btn-normal" id="data-add">
                    <i class="iconfont icon-add"></i>添加
                </button>
                <button class="layui-btn layui-btn-danger" id="data-delete">
                    <i class="iconfont icon-delete"></i>删除
                </button>
            </div>
        </div>
        <table id="list_table" class="layui-hide" lay-filter="mainList"></table>
    </div>
</div>
<script>
    layui.use(['layer', 'table', 'form'], function () {
        var layer = layui.layer;
        var table = layui.table;
        var form = layui.form;
        var $ = layui.$;

        //表单重新渲染
        form.render();

        //表格渲染
        var tableObj = table.render({
            id: 'list_table',
            elem: '#list_table',
            url: '/${moduleName}/${pathName}/list',
            align: "center",
            cols: [[ //表头
                {type: 'checkbox'},
                {type: 'numbers', title: '序号', width: 50},
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
                {field: '${column.attrname}', title: '${column.comments}', width: 120, align: 'center'},
#end
#end
                {
                    field: 'lock', title: '操作', width: 170, unresize: true, align: 'center',
                    templet: function (d) {
                        return '<button class="layui-btn layui-btn-warm layui-btn-sm" lay-event="edit">修改</button>'
                            +'<button class="layui-btn layui-btn-danger layui-btn-sm" lay-event="delete">删除</button>';
                    }
                }
            ]]
        });

        // 监听工具条
        table.on('tool(mainList)', function (obj) {
            var data = obj.data;        // data为当前行数据
            var layEvent = obj.event;   // 按钮事件名, lay-event

            // 修改
            if (layEvent === 'edit') {
                smartAui.dialog({
                    title: '修改',
                    template: 'edit',
                    saveUrl: '/${moduleName}/${pathName}/update',
                    tableObj: tableObj,
                    width: 500,
                    height: 600,
                    htmlData: data
                });
            }else if (layEvent === 'delete') {
                smartAui.confirm("确认删除？", function () {
                    $.ajax({
                        url: '/${moduleName}/${pathName}/delete',
                        data: {${pk.attrname}: data.${pk.attrname}},
                        success: function (result) {
                            if (result.success) {
                                layer.msg("删除成功");
                                smartAui.reloadTable(tableObj);
                            }else {
                                layer.msg("操作异常");
                                smartAui.reloadTable(tableObj);
                            }
                        }
                    })
                }, 0);
            }
        });

        // 添加
        $("#data-add").click(function () {
            smartAui.dialog({
                title: '添加',
                template: 'add',
                saveUrl: '/${moduleName}/${pathName}/save',
                tableObj: tableObj,
                width: 500,
                height: 600,
                beforeSubmit: function (data) {
                    // data为表单数据集合
                    // return true;     继续提交
                    // return false;    可以阻止表单提交
                    // return data;     可修改data后，继续提交
                    return true;
                }
            })
        });
        // 删除
        $("#data-delete").click(function () {
            var data = table.checkStatus('list_table').data;//已选中数据
            if (data.length == 0) {
                layer.msg("请至少选择一条");
                return;
            }
            var arr = [];
            for (var i = 0; i < data.length; i++) {
                arr.push(data[i].${pk.attrname});
            }
            smartAui.confirm("确认删除？", function () {
                $.ajax({
                    type: "post",
                    url: '/${moduleName}/${pathName}/deleteBatch',
                    data: {"${pk.attrname}s[]": arr},
                    success: function (result) {
                        if (result.success) {
                            layer.msg("删除成功");
                            smartAui.reloadTable(tableObj);
                        }
                    }
                })
            }, 0);
        });
        $("#query").click(function () {
            smartAui.reloadTable(tableObj);
        });
    });
</script>
